# -*- mode: ruby -*-
# vi: set ft=ruby :

$ip_file = "db_ip.txt"

Vagrant.configure("2") do |config|
  config.vm.box = 'digital_ocean'
  config.vm.box_url = "https://github.com/devopsgroup-io/vagrant-digitalocean/raw/master/box/digital_ocean.box"
  config.ssh.private_key_path = './id_rsa'
  config.vm.synced_folder ".", "/vagrant", type: "rsync"

  config.vm.define "cloudserver", primary: true do |server|
    server.vm.provider :digital_ocean do |provider|
      provider.ssh_key_name = "MiniTwitITU"
      # ENV["SSH_KEY_NAME"]
      provider.token = "dop_v1_efb4e5806f50725077ef6cfa7a2a03c0b0afdff9a0be37d71876dcd46eb5e9ad"
      # ENV["DIGITAL_OCEAN_TOKEN"]
      provider.image = 'ubuntu-22-04-x64'
      provider.region = 'fra1'
      provider.size = 's-1vcpu-1gb'
      provider.privatenetworking = true
    end

    server.vm.hostname = "cloudserver"

    server.trigger.after :up do |trigger|
      trigger.info =  "Writing cloudserver's IP to file..."
      trigger.ruby do |env,machine|
        remote_ip = machine.instance_variable_get(:@communicator).instance_variable_get(:@connection_ssh_info)[:host]
        File.write($ip_file, remote_ip)
      end
    end

    server.vm.provision "shell", inline: <<-SHELL
      echo "Installing Docker"
      sudo apt install -y docker.io
      sudo usermod -aG docker ${USER}
      
      echo "Installing Docker-Compose"
      sudo apt install -y docker-compose

      echo "Cloning repo"
      git clone https://github.com/MinitwitGroupI/MiniTwit.git

      echo "Setup environment"
      cd MiniTwit/src/backend/

      echo "SESSION_SECRET_KEY=uiuiui" > .env
      echo "DATABASE_URL=/tmp/minitwit.db" >> .env

      echo "Start application with Docker Compose"
      cd ~/MiniTwit/src/
      sudo docker-compose up -d

      echo "================================================================="
      echo "=                            DONE                               ="
      echo "================================================================="
      echo "Navigate in your browser to:"
      THIS_IP=`hostname -I | cut -d" " -f1`
      echo "http://${THIS_IP}:8000"

    SHELL
  end
  
  # ideally 'sudo apt-get update' below, but doesn't work after 'rm -r .vagrant/' before calling 'vagrant up'
  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    
  SHELL
end