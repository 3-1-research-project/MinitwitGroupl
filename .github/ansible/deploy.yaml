- hosts: all
  gather_facts: false

  tasks:
  - name: install pip
    apt:
      name: python3-pip
      state: present
    become: true 
  
  - name: install docker compose
    apt:
      name: docker-compose
      state: present
    become: true 
  
  - name: install docker python sdk
    pip:
      name: docker
      state: present
    become: true

  - name: ensure dockerlogs directory exists
    become: true
    file:
      state: directory
      path: /usr/share/filebeat/dockerlogs

  - name: copy the compose file
    copy:
      src: docker-compose.yml
      dest: /tmp/docker-compose.yml
    become: true
  
  - name: copy the prometheus configuration file
    copy:
      src: prometheus.yml
      dest: /home/config/prometheus.yml
    become: true

  - name: copy the filebeat configuration file
    copy:
      src: filebeat.yml
      dest: /usr/share/filebeat/filebeat.yml
      owner: root
      group: root
    become: true

  - name: copying provisioning directory
    become: true
    copy:
      src: provisioning/
      dest: /home/config/provisioning

  - name: copy the generated .env file
    copy:
      src: .env
      dest: /home/config/.env
    become: true


  - docker_host_info:
      images: yes
      containers: yes
    register: docker_objects

  - docker_container:
      name: "{{ item.Id }}"
      state: stopped
    loop: "{{ docker_objects.containers }}"
    loop_control:
      label: "{{ item.Id }}"

  - docker_image:
      name: item.RepoTags | first
      state: absent
      force_absent: yes
    loop: "{{ docker_objects.images }}"
    loop_control:
      label: "{{ item.RepoTags | first }}"

  - name: Tear down existing services
    community.docker.docker_compose:
      project_src: /tmp/
      remove_images: all
      state: absent
    become: true

  - name: run the copied compose file
    community.docker.docker_compose:
      project_src: /tmp/
      state: present
    become: true

  - name: Create a network
    become: true
    community.docker.docker_network:
      name: elk

  - name: Create a volume
    become: true
    docker_volume:
      name: elk_elasticsearch

  - name: Start filebeat container
    become: true
    community.docker.docker_container:
      name: filebeat
      image: "docker.elastic.co/beats/filebeat:7.17.1"
      state: started
      user: root
      restart: yes
      volumes:
        - /var/lib/docker/containers:/usr/share/dockerlogs/data:ro
        - /var/run/docker.sock:/var/run/docker.sock
        - /usr/share/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      restart_policy: unless-stopped
      networks:
        - name: elk
      command: "filebeat -e -strict.perms=false"

  - name: Start elasticsearch container
    become: true
    community.docker.docker_container:
      name: elasticsearch
      image: "docker.elastic.co/elasticsearch/elasticsearch:7.17.1"
      state: started
      user: root
      restart: yes
      env:
        ES_JAVA_OPTS: "-Xms1g -Xmx1g"
        discovery.type: "single-node"
        xpack.security.enabled: "false"
        ELASTICSEARCH_USERNAME: "kibana"
        ELASTICSEARCH_PASSWORD: "sesame0uvr3toi"
      volumes:
          - elk_elasticsearch:/usr/share/elasticsearch/data
      networks:
        - name: elk
      published_ports:
        - 9200:9200

  - name: Start kibana container
    become: true
    community.docker.docker_container:
      name: kibana
      image: "docker.elastic.co/kibana/kibana:7.17.1"
      env:
        ELASTICSEARCH_HOSTS: '["http://157.245.16.6:9200","http://elasticsearch:9200"]'
        ELASTICSEARCH_USERNAME: "kibana"
        ELASTICSEARCH_PASSWORD: "sesame0uvr3toi"
        xpack.security.enabled: "false"
      networks:
        - name: elk
      published_ports:
        - 5601:5601